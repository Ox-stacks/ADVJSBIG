{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marcu\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADVJSBIG\\\\client\\\\src\\\\pages\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getQuiz, submitQuiz } from '../api/quiz';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [quiz, setQuiz] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        setLoading(true);\n        const response = await getQuiz(id);\n        setQuiz(response.data);\n        // Initialize answers array with nulls (no answer selected)\n        setAnswers(new Array(response.data.questions.length).fill(null));\n      } catch (err) {\n        setError('Failed to load quiz. Please try again later.');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuiz();\n  }, [id]);\n  const handleAnswerSelect = optionIndex => {\n    const newAnswers = [...answers];\n    newAnswers[currentQuestion] = optionIndex;\n    setAnswers(newAnswers);\n  };\n  const goToNextQuestion = () => {\n    if (currentQuestion < quiz.questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n  const goToPreviousQuestion = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1);\n    }\n  };\n  const handleSubmit = async () => {\n    // Check if all questions are answered\n    if (answers.includes(null)) {\n      alert('Please answer all questions before submitting.');\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const response = await submitQuiz(id, answers);\n      navigate(`/results/${id}`, {\n        state: {\n          result: response\n        }\n      });\n    } catch (err) {\n      setError('Failed to submit quiz. Please try again.');\n      console.error(err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading quiz...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 21\n  }, this);\n  if (!quiz) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: \"Quiz not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 21\n  }, this);\n  const currentQuestionData = quiz.questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-progress\",\n      children: [\"Question \", currentQuestion + 1, \" of \", quiz.questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentQuestionData.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-list\",\n        children: currentQuestionData.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `option ${answers[currentQuestion] === index ? 'selected' : ''}`,\n          onClick: () => handleAnswerSelect(index),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousQuestion,\n        disabled: currentQuestion === 0,\n        className: \"nav-button\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), currentQuestion < quiz.questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextQuestion,\n        className: \"nav-button\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: submitting,\n        className: \"submit-button\",\n        children: submitting ? 'Submitting...' : 'Submit Quiz'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"fCj4J0KTpO20UZ2CWqZSwYs2Smk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","getQuiz","submitQuiz","jsxDEV","_jsxDEV","Quiz","_s","id","navigate","quiz","setQuiz","answers","setAnswers","currentQuestion","setCurrentQuestion","loading","setLoading","error","setError","submitting","setSubmitting","fetchQuiz","response","data","Array","questions","length","fill","err","console","handleAnswerSelect","optionIndex","newAnswers","goToNextQuestion","goToPreviousQuestion","handleSubmit","includes","alert","state","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestionData","title","question","options","map","option","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/marcu/OneDrive/Documents/GitHub/ADVJSBIG/client/src/pages/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { getQuiz, submitQuiz } from '../api/quiz';\r\nimport './Quiz.css';\r\n\r\nconst Quiz = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchQuiz = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await getQuiz(id);\r\n        setQuiz(response.data);\r\n        // Initialize answers array with nulls (no answer selected)\r\n        setAnswers(new Array(response.data.questions.length).fill(null));\r\n      } catch (err) {\r\n        setError('Failed to load quiz. Please try again later.');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchQuiz();\r\n  }, [id]);\r\n\r\n  const handleAnswerSelect = (optionIndex) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[currentQuestion] = optionIndex;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const goToNextQuestion = () => {\r\n    if (currentQuestion < quiz.questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    }\r\n  };\r\n\r\n  const goToPreviousQuestion = () => {\r\n    if (currentQuestion > 0) {\r\n      setCurrentQuestion(currentQuestion - 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    // Check if all questions are answered\r\n    if (answers.includes(null)) {\r\n      alert('Please answer all questions before submitting.');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      const response = await submitQuiz(id, answers);\r\n      navigate(`/results/${id}`, { state: { result: response } });\r\n    } catch (err) {\r\n      setError('Failed to submit quiz. Please try again.');\r\n      console.error(err);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"loading\">Loading quiz...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n  if (!quiz) return <div className=\"error\">Quiz not found</div>;\r\n\r\n  const currentQuestionData = quiz.questions[currentQuestion];\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h1>{quiz.title}</h1>\r\n      <div className=\"quiz-progress\">\r\n        Question {currentQuestion + 1} of {quiz.questions.length}\r\n      </div>\r\n      \r\n      <div className=\"question-container\">\r\n        <h2>{currentQuestionData.question}</h2>\r\n        \r\n        <div className=\"options-list\">\r\n          {currentQuestionData.options.map((option, index) => (\r\n            <div \r\n              key={index} \r\n              className={`option ${answers[currentQuestion] === index ? 'selected' : ''}`}\r\n              onClick={() => handleAnswerSelect(index)}\r\n            >\r\n              {option}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"quiz-navigation\">\r\n        <button \r\n          onClick={goToPreviousQuestion} \r\n          disabled={currentQuestion === 0}\r\n          className=\"nav-button\"\r\n        >\r\n          Previous\r\n        </button>\r\n        \r\n        {currentQuestion < quiz.questions.length - 1 ? (\r\n          <button \r\n            onClick={goToNextQuestion} \r\n            className=\"nav-button\"\r\n          >\r\n            Next\r\n          </button>\r\n        ) : (\r\n          <button \r\n            onClick={handleSubmit} \r\n            disabled={submitting}\r\n            className=\"submit-button\"\r\n          >\r\n            {submitting ? 'Submitting...' : 'Submit Quiz'}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}